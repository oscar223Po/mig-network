function __awaiter(i,e,t,s){function a(r){return r instanceof t?r:new t(function(l){l(r)})}return new(t||(t=Promise))(function(r,l){function n(c){try{h(s.next(c))}catch(o){l(o)}}function p(c){try{h(s.throw(c))}catch(o){l(o)}}function h(c){c.done?r(c.value):a(c.value).then(n,p)}h((s=s.apply(i,[])).next())})}typeof SuppressedError=="function"&&SuppressedError;function getDefaultExportFromCjs(i){return i&&i.__esModule&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i}var fastDeepEqual,hasRequiredFastDeepEqual;function requireFastDeepEqual(){return hasRequiredFastDeepEqual||(hasRequiredFastDeepEqual=1,fastDeepEqual=function i(e,t){if(e===t)return!0;if(e&&t&&typeof e=="object"&&typeof t=="object"){if(e.constructor!==t.constructor)return!1;var s,a,r;if(Array.isArray(e)){if(s=e.length,s!=t.length)return!1;for(a=s;a--!==0;)if(!i(e[a],t[a]))return!1;return!0}if(e.constructor===RegExp)return e.source===t.source&&e.flags===t.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===t.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===t.toString();if(r=Object.keys(e),s=r.length,s!==Object.keys(t).length)return!1;for(a=s;a--!==0;)if(!Object.prototype.hasOwnProperty.call(t,r[a]))return!1;for(a=s;a--!==0;){var l=r[a];if(!i(e[l],t[l]))return!1}return!0}return e!==e&&t!==t}),fastDeepEqual}var fastDeepEqualExports=requireFastDeepEqual(),isEqual=getDefaultExportFromCjs(fastDeepEqualExports);const DEFAULT_ID="__googleMapsScriptId";var LoaderStatus;(function(i){i[i.INITIALIZED=0]="INITIALIZED",i[i.LOADING=1]="LOADING",i[i.SUCCESS=2]="SUCCESS",i[i.FAILURE=3]="FAILURE"})(LoaderStatus||(LoaderStatus={}));class Loader{constructor({apiKey:e,authReferrerPolicy:t,channel:s,client:a,id:r=DEFAULT_ID,language:l,libraries:n=[],mapIds:p,nonce:h,region:c,retries:o=3,url:u="https://maps.googleapis.com/maps/api/js",version:m}){if(this.callbacks=[],this.done=!1,this.loading=!1,this.errors=[],this.apiKey=e,this.authReferrerPolicy=t,this.channel=s,this.client=a,this.id=r||DEFAULT_ID,this.language=l,this.libraries=n,this.mapIds=p,this.nonce=h,this.region=c,this.retries=o,this.url=u,this.version=m,Loader.instance){if(!isEqual(this.options,Loader.instance.options))throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(Loader.instance.options)}`);return Loader.instance}Loader.instance=this}get options(){return{version:this.version,apiKey:this.apiKey,channel:this.channel,client:this.client,id:this.id,libraries:this.libraries,language:this.language,region:this.region,mapIds:this.mapIds,nonce:this.nonce,url:this.url,authReferrerPolicy:this.authReferrerPolicy}}get status(){return this.errors.length?LoaderStatus.FAILURE:this.done?LoaderStatus.SUCCESS:this.loading?LoaderStatus.LOADING:LoaderStatus.INITIALIZED}get failed(){return this.done&&!this.loading&&this.errors.length>=this.retries+1}createUrl(){let e=this.url;return e+="?callback=__googleMapsCallback&loading=async",this.apiKey&&(e+=`&key=${this.apiKey}`),this.channel&&(e+=`&channel=${this.channel}`),this.client&&(e+=`&client=${this.client}`),this.libraries.length>0&&(e+=`&libraries=${this.libraries.join(",")}`),this.language&&(e+=`&language=${this.language}`),this.region&&(e+=`&region=${this.region}`),this.version&&(e+=`&v=${this.version}`),this.mapIds&&(e+=`&map_ids=${this.mapIds.join(",")}`),this.authReferrerPolicy&&(e+=`&auth_referrer_policy=${this.authReferrerPolicy}`),e}deleteScript(){const e=document.getElementById(this.id);e&&e.remove()}load(){return this.loadPromise()}loadPromise(){return new Promise((e,t)=>{this.loadCallback(s=>{s?t(s.error):e(window.google)})})}importLibrary(e){return this.execute(),google.maps.importLibrary(e)}loadCallback(e){this.callbacks.push(e),this.execute()}setScript(){var e,t;if(document.getElementById(this.id)){this.callback();return}const s={key:this.apiKey,channel:this.channel,client:this.client,libraries:this.libraries.length&&this.libraries,v:this.version,mapIds:this.mapIds,language:this.language,region:this.region,authReferrerPolicy:this.authReferrerPolicy};Object.keys(s).forEach(r=>!s[r]&&delete s[r]),!((t=(e=window?.google)===null||e===void 0?void 0:e.maps)===null||t===void 0)&&t.importLibrary||(r=>{let l,n,p,h="The Google Maps JavaScript API",c="google",o="importLibrary",u="__ib__",m=document,y=window;y=y[c]||(y[c]={});const f=y.maps||(y.maps={}),E=new Set,g=new URLSearchParams,b=()=>l||(l=new Promise((d,v)=>__awaiter(this,void 0,void 0,function*(){var w;yield n=m.createElement("script"),n.id=this.id,g.set("libraries",[...E]+"");for(p in r)g.set(p.replace(/[A-Z]/g,I=>"_"+I[0].toLowerCase()),r[p]);g.set("callback",c+".maps."+u),n.src=this.url+"?"+g,f[u]=d,n.onerror=()=>l=v(Error(h+" could not load.")),n.nonce=this.nonce||((w=m.querySelector("script[nonce]"))===null||w===void 0?void 0:w.nonce)||"",m.head.append(n)})));f[o]?console.warn(h+" only loads once. Ignoring:",r):f[o]=(d,...v)=>E.add(d)&&b().then(()=>f[o](d,...v))})(s);const a=this.libraries.map(r=>this.importLibrary(r));a.length||a.push(this.importLibrary("core")),Promise.all(a).then(()=>this.callback(),r=>{const l=new ErrorEvent("error",{error:r});this.loadErrorCallback(l)})}reset(){this.deleteScript(),this.done=!1,this.loading=!1,this.errors=[],this.onerrorEvent=null}resetIfRetryingFailed(){this.failed&&this.reset()}loadErrorCallback(e){if(this.errors.push(e),this.errors.length<=this.retries){const t=this.errors.length*Math.pow(2,this.errors.length);console.error(`Failed to load Google Maps script, retrying in ${t} ms.`),setTimeout(()=>{this.deleteScript(),this.setScript()},t)}else this.onerrorEvent=e,this.callback()}callback(){this.done=!0,this.loading=!1,this.callbacks.forEach(e=>{e(this.onerrorEvent)}),this.callbacks=[]}execute(){if(this.resetIfRetryingFailed(),!this.loading)if(this.done)this.callback();else{if(window.google&&window.google.maps&&window.google.maps.version){console.warn("Google Maps already loaded outside @googlemaps/js-api-loader. This may result in undesirable behavior as options and script parameters may not match."),this.callback();return}this.loading=!0,this.setScript()}}}const MAP_KEY="",MAP_STYLES=[{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#B1AEAE"}]},{featureType:"landscape",elementType:"all",stylers:[{color:"#E5E2E2"}]},{featureType:"poi",elementType:"labels.icon",stylers:[{saturation:-100},{lightness:45}]},{featureType:"poi",elementType:"labels.text",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"geometry.fill",stylers:[{color:"#D6D3D3"}]},{featureType:"road",elementType:"geometry.stroke",stylers:[{color:"#CECBCB"}]},{featureType:"road",elementType:"labels.text.fill",stylers:[{color:"#B0AEAE"}]},{featureType:"road",elementType:"labels.text.stroke",stylers:[{color:"#E4E1E1"}]},{featureType:"road.highway",elementType:"all",stylers:[{visibility:"simplified"},{saturation:-100}]},{featureType:"road.arterial",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"transit",elementType:"all",stylers:[{visibility:"on"},{saturation:-100},{lightness:50}]},{featureType:"water",elementType:"all",stylers:[{color:"#D0CDCD"},{visibility:"on"}]}];function mapInit(){const i={section:"[data-fls-map]",marker:"[data-fls-map-marker]",map:"[data-fls-map-body]"},e=document.querySelectorAll(i.section);if(!e.length)return;const t=async a=>{const r=new Loader({apiKey:MAP_KEY,version:"weekly",libraries:["places"]});try{const{Map:l}=await r.importLibrary("maps"),{AdvancedMarkerElement:n}=await r.importLibrary("marker"),p=await r.importLibrary("core");a({Map:l,AdvancedMarkerElement:n,Core:p})}catch(l){console.log(l)}},s=async({api:a,lng:r,lat:l,markersData:n,zoom:p,maxZoom:h,$map:c})=>{const o={maxZoom:h,zoom:p,mapTypeControl:!1,styles:MAP_STYLES,center:{lat:l,lng:r},disableDefaultUI:!0,mapId:"DEMO_MAP_ID"},u=new a.Map(c,o);return await n.map(({lat:m,lng:y,icon:f,title:E,markerZoom:g,markerPopup:b})=>{let d;f&&(d=document.createElement("img"),d.src=f);const v=new a.AdvancedMarkerElement({map:u,title:E,gmpClickable:!0,position:new a.Core.LatLng(m,y),content:f?d:null});return v.addEventListener("gmp-click",()=>{g.enable&&u.setZoom(+g.value||10),b.enable&&window.flsPopup&&window.flsPopup.open(b.value),u.panTo(v.position)}),v}),u};t(a=>{e.forEach(r=>{const l=r.querySelectorAll(i.map);l.length&&l.forEach(n=>{const p=n.parentElement.querySelectorAll(i.marker),h=Array.from(p).map(o=>({lng:parseFloat(o.dataset.flsMapLng)||0,lat:parseFloat(o.dataset.flsMapLat)||0,icon:o.dataset.flsMapIcon,title:o.dataset.flsMapTitle,markerZoom:{enable:o.hasAttribute("data-fls-map-marker-zoom"),value:o.dataset.flsMapMarkerZoom},markerPopup:{enable:o.hasAttribute("data-fls-map-marker-popup"),value:o.dataset.flsMapMarkerPopup}})),c=s({api:a,$map:n,lng:parseFloat(n.dataset.flsMapLng)||0,lat:parseFloat(n.dataset.flsMapLat)||0,zoom:parseFloat(n.dataset.flsMapZoom)||6,maxZoom:parseFloat(n.dataset.flsMapMaxZoom)||18,markersData:h})})})})}document.querySelector("[data-fls-map]")&&window.addEventListener("load",mapInit),document.querySelectorAll('.file input[type="file"]').forEach(i=>{i.addEventListener("change",()=>{const e=i.closest("label").nextElementSibling;i.files.length>0?e.textContent="\u0412\u044B \u0432\u044B\u0431\u0440\u0430\u043B\u0438: "+i.files[0].name:e.textContent=""})});const inputSearch=document.querySelector(".search__input"),cancelBtn=document.querySelector(".search__button--cancel");cancelBtn!==null&&(inputSearch.addEventListener("input",()=>{inputSearch.value.trim()!==""?cancelBtn.classList.add("active-clear"):cancelBtn.classList.remove("active-clear")}),cancelBtn.addEventListener("click",()=>{inputSearch.value="",cancelBtn.classList.remove("active-clear"),inputSearch.focus()}));
